{"version":3,"sources":["styles/theme.ts","components/BodyContainer.tsx","components/Loading.tsx","services/CoinAPI.ts","utils/getIcon.ts","components/Button.tsx","routes/Home.tsx","components/Potal.tsx","components/Modal.tsx","routes/Coin.tsx","routes/Chart.tsx","routes/Price.tsx","Router.tsx","styles/GlobalStyle.ts","App.tsx","index.tsx"],"names":["sizes","mobile","tablet","desktop","media","makeColor","color","default","chroma","dark","darken","light","brighten","Object","keys","reduce","acc","label","args","css","lightTheme","borderRadius","primary","secondary","background","foreground","typography","Container","styled","div","BodyContainer","children","Loading","instance","axios","create","baseURL","CoinAPI","getCoins","a","get","result","data","getCoinDetail","id","getPrice","getHistory","endDate","Math","floor","Date","now","startDate","params","start","end","getIcon","toLocaleLowerCase","BasicButton","button","theme","Button","onClick","Title","h1","Header","ControlBox","Pagenation","CoinList","ul","Coin","li","Home","useQuery","dataLoading","isLoading","isError","useState","page","setPage","viewCounter","setViewCounter","filteredData","filter","item","is_active","totalPage","length","name","onChange","e","newValue","currentTarget","value","Number","prev","icon","faCaretLeft","type","useInput","currentPage","max","faCaretRight","slice","map","coin","to","state","src","symbol","alt","toLowerCase","Portal","elementId","rootElement","useMemo","document","getElementById","createPortal","ModalContainer","$visible","ModalMessageContainer","Modal","isOpen","target","InfoBox","Desc","PriceInfoBox","Tabs","Tab","Link","$isactive","TabContainer","useLocation","coinID","useParams","priceMatch","useMatch","chartMatch","navigate","useNavigate","setIsOpen","infoLoading","info","priceLoading","price","refetch","Helmet","faLongArrowAltLeft","then","setTimeout","faUndoAlt","rank","description","quotes","USD","ath_price","toFixed","Chart","candleData","x","time_close","y","open","high","low","close","series","options","chart","toolbar","autoSelected","show","zoom","enabled","height","width","plotOptions","candlestick","colors","title","text","toUpperCase","align","style","fontSize","fontWeight","mode","xaxis","yaxis","labels","fontFamily","formatter","tooltip","fillSeriesColor","custom","seriesIndex","dataPointIndex","w","o","globals","seriesCandleO","h","seriesCandleH","l","seriesCandleL","c","seriesCandleC","OverViewBox","Value","Price","USDData","entries","replaceAll","indexOf","faSortUp","faSortDown","Router","path","element","GlobalStyle","createGlobalStyle","reset","props","queryClient","QueryClient","App","client","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3483321f.chunk.js","sourcesContent":["import { css, DefaultTheme } from 'styled-components';\nimport { BackQuoteArgs, Color, Media, Sizes } from './styled';\nimport chroma from 'chroma-js'\n\nconst sizes:Sizes ={\n  mobile: 320,\n  tablet: 786,\n  desktop: 1024\n}\n\nconst media:Media = {\n  mobile: (...args: BackQuoteArgs) => undefined,\n  tablet: (...args: BackQuoteArgs) => undefined,\n  desktop: (...args: BackQuoteArgs) => undefined\n}\n\nconst makeColor = (color: string): Color => { \n  \n  return {\n    //@ts-ignore\n    default: chroma(color),\n    //@ts-ignore\n    dark: chroma(color).darken(2),\n    //@ts-ignore\n    light: chroma(color).brighten(2)\n  }\n}\n\nObject.keys(sizes).reduce((acc,label) => {\n  switch(label) {\n    case 'mobile' :\n      acc.mobile = (...args) => css`\n      @media screen and (min-width: ${sizes.mobile}px){\n        ${args}\n      }`\n    break;\n    case 'tablet' :\n    acc.tablet = (...args) => css`\n    @media screen and (min-width: ${sizes.tablet}px){\n      ${args}\n    }`\n    break;\n    case 'desktop' :\n    acc.desktop = (...args) => css`\n    @media screen and (min-width: ${sizes.desktop}px){\n      ${args}\n    }`\n    break;  \n  }\n  return acc\n},media)\n\n\nexport const lightTheme: DefaultTheme = {\n  sizes,\n  borderRadius: '4px',\n  media,\n  color: {\n    primary: makeColor('#9b59b6'),\n    secondary: makeColor('#313131'),\n    background: \"#222f3e\",\n    foreground: \"#f5f6fa\"\n  },\n  typography: '2px'\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\nheight: 100%;\npadding: 24px;\n`;\n\nconst BodyContainer:React.FC = ({children}) => {\n  return (\n    <Container>\n      {children}\n    </Container>\n  )\n}\n\nexport default BodyContainer\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default Loading\n","import axios from \"axios\"\n\nexport interface CoinsResponse { \n    id: string\n    name: string\n    symbol: string\n    rank: number\n    is_new: boolean\n    is_active: boolean\n    type: string\n}\ninterface Team {\n  id: string\n  name: string\n  position: string\n}\ninterface LinkExtand {\n  url: string,\n  type: string,\n  stats: {  [key: string]: number }\n}\n\nexport interface CoinDetail { \n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string,\n    team: Team[],\n    description: string\n    message: string,\n    open_source: boolean,\n    hardware_wallet: boolean,\n    started_at: string\n    development_status: string\n    proof_type: string\n    org_structure: string\n    hash_algorithm: string\n    contract: string,\n    platform: string,\n    links: {[key:string]: string[] | null}\n    links_extended: LinkExtand[]\n    whitepaper: {\n      link: string\n      thumbnail: string\n    }\n    first_data_at: string\n    last_data_at: string\n  \n}\n\nexport interface CoinPrice {\n  \n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    circulating_supply: number,\n    total_supply: number,\n    max_supply: number,\n    beta_value: number,\n    first_data_at: string,\n    last_updated: string,\n    quotes: {\n      USD: {\n        price: number,\n        volume_24h: number,\n        volume_24h_change_24h: number,\n        market_cap: number,\n        market_cap_change_24h: number,\n        percent_change_15m: number,\n        percent_change_30m: number,\n        percent_change_1h: number,\n        percent_change_6h: number,\n        percent_change_12h: number,\n        percent_change_24h: number,\n        percent_change_7d: number,\n        percent_change_30d: number,\n        percent_change_1y: number,\n        ath_price: number,\n        ath_date: string,\n        percent_from_price_ath: number\n      }\n    }\n  \n}\n\nexport interface CoinHistory {  \n  time_open: string\n  time_close: string\n  open: number\n  high: number\n  low: number\n  close: number\n  volume: number\n  market_cap: number\n}\n\nconst instance = axios.create({\n  baseURL: \"https://api.coinpaprika.com/v1/\"\n})\n\ninterface API {\n  getCoins: () => Promise<CoinsResponse[]>\n  getCoinDetail: (id: string) => Promise<CoinDetail>,\n  getPrice: (id: string) => Promise<CoinPrice>\n  getHistory: (id: string) => Promise<CoinHistory[]>\n}\n\nconst CoinAPI: API = {\n  getCoins: async () =>  {\n    const result = await instance.get('coins');\n    return result.data\n  },\n  getCoinDetail: async (id: string) =>  {\n    const result = await instance.get(`coins/${id}`);\n    return result.data\n  },\n  getPrice: async (id: string) =>  {\n    const result = await instance.get(`tickers/${id}`);\n    return result.data\n  },\n  getHistory: async (id: string) =>  {\n    const endDate = Math.floor(Date.now() / 1000);\n    const startDate = endDate - 60 * 60 * 24 * 14;\n    const result = await instance.get(`coins/${id}/ohlcv/historical`,{\n      params: {\n        start: startDate,\n        end: endDate\n      }\n    });\n    return result.data\n  }\n}\n\nexport default CoinAPI","const getIcon = (id: string) => `https://cryptoicon-api.vercel.app/api/icon/${id.toLocaleLowerCase()}`;\nexport default getIcon","import React, { ButtonHTMLAttributes, FormEvent, FormEventHandler } from 'react'\nimport styled from 'styled-components'\n\n\nconst BasicButton = styled.button`\nbackground: none;\nwidth: 36px;\nheight: 36px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ncolor: ${({theme}) => theme.color.foreground};\nfont-size: 24px;\nborder: 1px solid ${({theme}) => theme.color.foreground};\nbackground-color: none;\ntransition: background-color 0.3s ease-in-out, color .3s ease-in-out;\n\n&:hover {\n  color: ${({theme}) => theme.color.background};\n  background-color: ${({theme}) => theme.color.foreground};\n}\n`;\n\ninterface ButtonProps {\n  onClick: () => void\n}\n\nconst Button:React.FC<ButtonProps> = ({children,onClick}) => {\n  return (\n    <BasicButton onClick={onClick}>\n      {children}\n    </BasicButton>\n  )\n}\n\nexport default Button\n","import React,{useState} from 'react'\nimport styled from \"styled-components\"\nimport BodyContainer from '../components/BodyContainer';\nimport Loading from '../components/Loading';\nimport CoinAPI from '../services/CoinAPI';\nimport { Link } from 'react-router-dom';\nimport getIcon from '../utils/getIcon';\nimport { useQuery } from 'react-query';\nimport Button from '../components/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretLeft,faCaretRight } from '@fortawesome/free-solid-svg-icons';\n\n// styled components\nconst Container = styled.div``;\n\n// header\nconst Title = styled.h1``;\nconst Header = styled.div`\nmargin-bottom: 24px;\nh1 {\n  font-size: 32px;\n  font-weight: bold;\n  text-align: center;\n}\n`;\n\n// controlbox\nconst ControlBox  = styled.div`\npadding: 0 16px;\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 16px;\nflex-direction: column;\n\nselect {\n  padding: 8px 16px;\n  margin-bottom: 10px;\n}\n\n${({theme: {media}}) => media.tablet`\nflex-direction: row;\nselect {\n  margin-bottom: 0;\n}\n`}\n\n\n`;\n\nconst Pagenation = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  > div {\n    margin: 0 16px;\n    height: 100%;\n  }\n\n  input {\n    width: 36px;\n    height: 100%;\n    margin-right: 10px;\n    text-align: center;\n    &::-webkit-outer-spin-button, &::-webkit-inner-spin-button {\n      appearance: none;\n      margin: 0\n    }\n  }\n`;\n\n\n\n// List\nconst CoinList = styled.ul`\npadding: 0 16px;\n`;\nconst Coin = styled.li`\n\nmargin: 8px auto;\n\nbackground-color: ${({theme}) => theme.color.foreground};\ncolor: ${({theme}) => theme.color.background};\nfont-weight: bold;\nborder-radius: 10px;\noverflow: hidden;\n\na {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 8px 16px;\n  transition: 0.3s ease-in-out;\n  &:hover {\n    background-color: ${({theme}) => theme.color.primary.default};\n  }\n  \n}\n\nimg {\n  width: 48px;\n  height: 48px;\n  margin-right: 16px;\n}\n`;\n\nconst Home = () => {\n\n  // hook\n  const {\n    isLoading: dataLoading,\n    isError,\n    data,\n  } = useQuery([\"list\"], CoinAPI.getCoins)\n  const [page, setPage] = useState(1);\n  const [viewCounter, setViewCounter] = useState(10);\n\n  // computed var\n  const filteredData = data?.filter(item => item.is_active);\n  const isLoading = dataLoading;\n  const totalPage =filteredData && Math.floor(filteredData.length / viewCounter);\n\n  // handler\n  const onChangeView= (e:React.FormEvent<HTMLSelectElement> ) => {\n    const newValue = e.currentTarget.value;\n    setViewCounter(Number(newValue));\n    setPage(1);\n  }\n  \n  const onChangePage = (e:React.FormEvent<HTMLInputElement>) => {\n    const useInput = Number(e.currentTarget.value);\n    let currentPage = page;\n    \n    if(totalPage && useInput > totalPage) {\n      currentPage = totalPage\n    } else if (useInput < 1) {\n      currentPage = 1\n      return\n    } else {\n      currentPage = useInput\n    }\n    setPage(currentPage);\n\n  }\n  const incresePage = () => {\n    setPage(prev => {\n        if(totalPage && prev >= totalPage) {\n          return prev\n        }\n        return prev + 1     \n    })\n  }\n  const decresePage = () => {\n    setPage(prev => {\n      if(prev <= 1) {\n        return prev\n      }\n      return prev - 1     \n  })\n  }\n\n  // jsx\n  return (\n    <BodyContainer >\n      {\n      <Container>\n\n        {/* 헤더 */}\n        <Header>\n          <h1>\n          Coin List\n          </h1>\n        </Header>\n\n        {\n          isLoading ? <Loading /> : <>\n          {/* 컨트롤 박스 */}\n        <ControlBox>\n          <select name=\"\" id=\"\" onChange={onChangeView} value={viewCounter}>\n            <option value=\"10\">10개씩 보기</option>\n            <option value=\"20\">20개씩 보기</option>\n            <option value=\"50\">50개씩 보기</option>\n          </select>\n\n          <Pagenation>\n            <Button onClick={decresePage}>\n              <FontAwesomeIcon icon={faCaretLeft} />\n            </Button>\n            <div>\n              <input type=\"number\" value={page} onChange={onChangePage} max={totalPage} />/\n              <span>{totalPage}</span>\n            </div>\n            \n            <Button onClick={incresePage}>\n              <FontAwesomeIcon icon={faCaretRight} />\n            </Button>\n          </Pagenation>\n\n        </ControlBox>\n\n        {/* 리스트 */}\n        <CoinList>\n        {\n          filteredData &&\n          filteredData.slice(((page - 1)*viewCounter),((page - 1)*viewCounter) + viewCounter).map(coin => <Coin key={coin.id}>\n            <Link to={`/coin/${coin.id}`} \n            state={{\n              name: coin.name  \n            }}>\n            <img src={getIcon(coin.symbol)} alt={coin.symbol} />\n            <Title>\n              {coin.name} / {coin.symbol.toLowerCase()}\n            </Title>\n            </Link>\n          </Coin>)\n        }\n        </CoinList>\n          \n          </>\n        }\n\n        \n\n      </Container>\n      }\n    </BodyContainer>\n\n  )\n}\n\nexport default Home\n","import { useMemo } from 'react'\nimport { createPortal } from 'react-dom'\n\ninterface PortalProps {\n  elementId:string\n}\n\nconst Portal:React.FC<PortalProps> = ({ children, elementId }) => {\n  const rootElement = useMemo(() => document.getElementById(elementId), [\n    elementId,\n  ])\n\n  return createPortal(children, rootElement as Element)\n}\n\nexport default Portal","import React, { ReactEventHandler } from 'react'\nimport Portal from './Potal'\nimport styled from 'styled-components'\n\nconst ModalContainer = styled.div<{$visible: boolean}>`\nvisibility: ${({$visible}) => $visible ? 'visible' : 'hidden'};\nopacity:  ${({$visible}) => $visible ? '1' : '0'};\nposition: fixed;\nleft: 0;\nright: 0;\ntop: 0;\nbottom: 0;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: rgba(0,0,0,0.3);\ntransition: .2s ease-in-out;\n`;\nconst ModalMessageContainer = styled.div`\n  padding: 24px;\n  background-color: ${({theme}) => theme.color.foreground};\n  color: ${({theme}) => theme.color.background};\n  border-radius: 999px;\n`;\n\ninterface ModalProps {\n  isOpen: boolean\n}\n\nconst Modal:React.FC<ModalProps> = ({children, isOpen}) => {\n  const onClose = (e:React.SyntheticEvent) => {\n\n  }\n  const onDimedClick:ReactEventHandler = (e) => {\n    if(e.target === e.currentTarget) {\n      onClose(e)\n    } \n  }\n\n  return (\n    <Portal elementId='root'>\n      <ModalContainer onClick={onDimedClick} $visible={isOpen}>\n        <ModalMessageContainer>\n          {children}\n        </ModalMessageContainer>\n      </ModalContainer>\n    </Portal>\n  )\n}\n\nexport default Modal\n","import React,{useState} from 'react'\nimport styled from 'styled-components';\nimport { useParams,useLocation, Outlet, useMatch, useNavigate } from 'react-router'\nimport Loading from '../components/Loading';\nimport BodyContainer from '../components/BodyContainer';\nimport CoinAPI from '../services/CoinAPI';\nimport getIcon from '../utils/getIcon';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport {Helmet} from 'react-helmet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLongArrowAltLeft, faUndoAlt } from '@fortawesome/free-solid-svg-icons';\nimport Modal from '../components/Modal';\nimport Button from '../components/Button';\n\n\nconst Header = styled.div`\ndisplay: flex;\nmargin-bottom: 24px;\n\nh1 {\n  flex: 1;\n  font-size: 32px;\n  font-weight: bold;\n  text-align: center;\n}\n`;\n\nconst Container = styled.div``;\n\nconst InfoBox = styled.div`\ndisplay: flex;\ncolor: ${({theme}) => theme.color.background};\nbackground: ${({theme}) => theme.color.foreground};\nborder-radius: 10px;\nmargin-bottom: 24px;\nwhite-space: pre-wrap;\n\n> div {\n  padding: 16px;\n  flex:1;\n  display: flex;\n  flex-direction: column;\n  \n  align-items: center;\n  \n  h3 {\n    text-align: center;\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: bold;\n    text-transform: uppercase;\n    margin-bottom: 8px;\n  }\n  > div {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n \n  img {\n \n    width: 48px;\n    height: 48px;\n  }\n}\n`;\n\nconst Desc = styled.div`\nfont-size: 16px;\nline-height: 20px;\nmargin-bottom: 24px;\n\nh2 {\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 8px;\n}\n`;\n\nconst PriceInfoBox = styled(InfoBox)`\n`;\n\nconst Tabs = styled.div`\ndisplay: flex; \n`\n\nconst Tab = styled(Link)<{$isactive: boolean}>`\n  padding: 10px 0;\n  text-align: center;\n  border-radius: 20px 20px 0 0;\n  color: ${({theme}) => theme.color.background};\n  background-color: ${({theme,$isactive}) => $isactive ? theme.color.primary.default : theme.color.foreground};\n  transition: background-color .2s ease-in-out;\n  flex: 1;\n`\n\nconst TabContainer = styled.div`\n  \n  \n`;\n\n\ninterface RouterStates {\n  state: {\n    name: string,\n  }\n}\n\ninterface CoinParam {\n  coinID : string\n}\n\nconst Coin: React.FC = () => {\n  // hook\n  const {state} = useLocation() as RouterStates;\n  const {coinID} = useParams() as CoinParam;\n  const priceMatch = useMatch('/coin/:coinID/price');\n  const chartMatch = useMatch('/coin/:coinID/chart');\n  const navigate = useNavigate();\n  \n  const [isOpen, setIsOpen] = useState(false)\n  const {\n    isLoading: infoLoading,\n    isError: infoError,\n    data: info,\n  } = useQuery([\"info\", coinID], () => CoinAPI.getCoinDetail(coinID));\n\n\n  const {\n    isLoading: priceLoading,\n    isError: priceError,\n    data: price,\n    refetch\n  } = useQuery([\"price\", coinID], () => CoinAPI.getPrice(coinID));\n\n const isLoading = infoLoading || priceLoading;\n const isError = infoError || priceError;  \n const onRefresh = () => {\n  if(!isOpen) {\n    setIsOpen(true)\n    refetch().then(() => {\n      setTimeout(() => {\n        setIsOpen(false)\n      }, 300)\n    })    \n  }\n }\n\n\n  return (\n    <BodyContainer>\n      <Helmet>\n        <title>\n        {state?.name ? state.name : isLoading ? \"Loading...\" : info?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Button onClick={() => navigate(\"/\")}>\n          <FontAwesomeIcon icon={faLongArrowAltLeft} />\n        </Button>\n        <h1>\n          {state?.name ? state.name : isLoading ? \"Loading...\" : info?.name}\n        </h1>\n        <Button onClick={onRefresh}>\n          <FontAwesomeIcon icon={faUndoAlt} />\n        </Button>\n      \n      </Header>\n      <Container>\n        {isLoading ? <Loading /> : <>\n        <InfoBox>\n          <div>\n            <h3>Rank</h3>\n            <div>\n            <p>{info?.rank}</p>\n            </div>\n            \n          </div>\n          <div>\n          <h3>SYMBOL</h3>\n          <div>\n          <p>{info?.symbol}</p>\n          </div>\n            \n          </div>\n          <div>\n          <h3>IMG</h3>\n          <div>\n          {\n              info?.symbol && <img src={getIcon(info.symbol)} alt={info.symbol} />\n            }\n          </div>\n            \n          </div>\n          \n        </InfoBox>\n\n        <Desc>\n          <h2>description</h2>\n          {info?.description}\n        </Desc>\n        \n        <PriceInfoBox>\n          <div>\n            <h3>All Time High Price</h3>\n            <div>\n              <p>\n                ${price?.quotes.USD.ath_price.toFixed(2)}\n              </p>\n              \n            </div>\n          </div>\n\n          <div>\n            <h3>Current Price</h3>\n            <div>\n              <p>\n              ${price?.quotes.USD.price.toFixed(2)}\n              </p>\n            \n            </div>\n          </div>\n\n        </PriceInfoBox>\n\n        <Tabs>\n        <Tab $isactive={chartMatch !== null ? true : false } to={`chart`}>Chart</Tab>\n        <Tab $isactive={priceMatch !== null ? true : false} to={`price`} state={{\n          data: price\n        }}>Price</Tab>\n        </Tabs>\n        \n        <TabContainer>\n          <Outlet />\n        </TabContainer>\n        </>}\n      </Container>\n      {/* modal */}\n      <Modal isOpen={isOpen}>\n        Refetch 완료\n      </Modal>\n    </BodyContainer>\n  )\n}\n\nexport default Coin\n","import React from 'react'\nimport styled, { useTheme } from 'styled-components';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom'\nimport CoinAPI from '../services/CoinAPI';\nimport Loading from '../components/Loading';\nimport ApexCharts from 'react-apexcharts';\n\nconst Container = styled.div`\npadding: 16px 8px;\nborder: 1px solid ${({theme}) => theme.color.primary.default};\nborder-top: none;\n`;\n\ninterface CoinParam {\n  coinID : string\n}\n\nconst Chart = () => {\n  \n  const {coinID} = useParams() as CoinParam;\n  const {isLoading,isError, data} = useQuery([\"history\", coinID], () => CoinAPI.getHistory(coinID));\n\n  const candleData = data?.map(price => {\n    return {\n      x: price.time_close,\n      y: [price.open, price.high, price.low, price.close],\n    }\n  })\n\n  \n  return (\n    <Container>\n      \n      {\n        isLoading \n        ? <Loading /> \n        : <ApexCharts\n        type='candlestick'\n        series={[{\n          name: 'candle',\n          data: candleData,\n          \n        }\n      ]}\n  \n        options={{\n          // 차트 툴바, 줌 off, 차트 (사이즈, 배경색)\n          chart: {\n            toolbar: {\n              autoSelected: 'pan',\n              show: false,\n            },\n            zoom: {\n              enabled: false\n            },\n            height: '100%',\n            width: '100%',\n            background: 'transparent'\n          },\n          // 캔들스틱 스타일 관련\n          plotOptions: {\n            candlestick: {\n              colors: {\n\n              }\n            }\n          },\n\n          title: {\n            text: `${coinID.toUpperCase()}`,\n            align: 'center',\n            style: {\n              fontSize: '18px',\n              fontWeight: 'bold',\n            }\n          },\n          theme: {\n            mode: 'dark'\n          },\n          \n          xaxis: {\n            type: 'datetime',\n          },\n          yaxis: {\n\n            labels: {\n              style: {\n                fontFamily: 'Lato'\n              },\n              formatter: (value) => `$ ${value.toFixed(2)}`\n            }\n          },\n          \n          tooltip: {\n            fillSeriesColor: true,\n            custom: ({ seriesIndex, dataPointIndex, w }) => {\n              const o = w.globals.seriesCandleO[seriesIndex][dataPointIndex];\n              const h = w.globals.seriesCandleH[seriesIndex][dataPointIndex];\n              const l = w.globals.seriesCandleL[seriesIndex][dataPointIndex];\n              const c = w.globals.seriesCandleC[seriesIndex][dataPointIndex];\n\n              return (\n                `<div class=\"apexcharts-tooltip-candlestick\">\n                <div class=\"apexcharts-tooltip-candlestick-line\">Open:<span class=\"value\">${Number(o).toFixed(2)}</span></div>\n                <div class=\"apexcharts-tooltip-candlestick-line\">High: <span class=\"value\">${Number(h).toFixed(2)}</span></div>\n                <div class=\"apexcharts-tooltip-candlestick-line\">Low: <span class=\"value\">${Number(l).toFixed(2)}</span></div>\n                <div class=\"apexcharts-tooltip-candlestick-line\">Close: <span class=\"value\">${Number(c).toFixed(2)}</span></div>\n                </div>`\n              )\n            },\n\n            style: {\n              fontFamily: 'Lato',\n              fontSize: '14px'\n            },\n            \n          },\n          \n          \n        }}\n        \n        />\n      }\n      \n    </Container>\n  )\n}\n\nexport default Chart\n","import React from 'react'\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components'\nimport { CoinPrice } from '../services/CoinAPI';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Container = styled.div`\npadding: 16px 8px;\nborder: 1px solid ${({theme}) => theme.color.primary.default};\nborder-top: none;\n`;\n\nconst OverViewBox = styled.div`\ndisplay: flex;\nwidth: 100%;\nbackground-color: ${({theme}) => theme.color.foreground};\ncolor: ${({theme}) => theme.color.background};\npadding: 16px 24px;\nborder-radius: 100px;\njustify-content: space-between;\nmargin-bottom: 8px;\nh3 {\n  text-transform: capitalize;\n  font-weight: bold;\n}\n`;\n\nconst Value = styled.div<{color: string | null}>`\ncolor: ${({color = 'inherit'}) => color};\n`;\n\ninterface LoactionStateProps {\n  state: {\n    data: CoinPrice\n  }\n}\n\nconst Price = () => {\n  const {state: {data}} = useLocation() as LoactionStateProps;\n  const USDData = Object.entries(data.quotes.USD);\n  \n  return (\n    <Container>\n      {USDData.map(item => <OverViewBox key={item[0]}>\n        <h3>\n          {item[0].replaceAll('_', ' ')}\n        </h3>\n        <Value color= { \n          item[0].indexOf('change') > -1 || item[0].indexOf('percent') > -1\n          ?( Number(item[1]) > 0   \n          ? '#00B746' \n          : '#EF403C' )\n          : '' }>\n            {\n              // 1st add precent \n              item[0].indexOf('percent') > -1 || item[0].indexOf('change') > -1 ? \n              (Number(item[1]) > 0 ?\n              <>\n              <span>\n              {'+' + item[1] + '% '}\n              </span>\n              <FontAwesomeIcon icon={faSortUp} />\n              </>  \n              : <>\n              <span>\n              {item[1] + '% '}\n              </span>\n              <FontAwesomeIcon icon={faSortDown} />\n              </>): \n              // 2nd add price $\n              (item[0].indexOf('price') > -1 ? \n              <span>\n                {'$'+Number(item[1]).toFixed(2)}\n              </span> : \n              <span>\n                {item[1]} \n              </span>\n              )\n\n            }\n        </Value>\n      </OverViewBox>)}\n      \n    </Container>\n  )\n}\n\nexport default Price\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from \"./routes/Home\"\nimport Coin from './routes/Coin';\nimport Chart from './routes/Chart';\nimport Price from './routes/Price';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/coin/:coinID\" element={<Coin />}>\n          <Route path=\"chart\" element={<Chart />} />\n          <Route path=\"price\" element={<Price />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","import { createGlobalStyle } from \"styled-components\";\n\nimport reset from \"styled-reset\";\nconst GlobalStyle = createGlobalStyle`\n${reset}\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  font-family: 'Lato', sans-serif;\n  height: 100%;\n  color: ${(props) => props.theme.color.foreground};\n  background-color: ${(props) => props.theme.color.background};\n}\n\n#root {\n  height: 100%;\n  max-width: 720px;\n  min-width: 320px;\n  margin: 0 auto;\n}\n\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\n/* apex tool tip */\n.apexcharts-tooltip-candlestick {\n  padding: 1em;\n  font-family: 'Lato';\n\n  &-line {\n    margin-bottom: 0.2em;\n    span {\n      font-weight: bold;\n      margin-left: 0.5em;\n    }\n  }\n}\n`\n\nexport default GlobalStyle;","import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme } from './styles/theme';\nimport Router from './Router';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { QueryClient,QueryClientProvider } from 'react-query';\nimport {ReactQueryDevtools} from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n    return (\n    <QueryClientProvider client={queryClient}>\n      \n      <ThemeProvider theme={lightTheme}>\n        <GlobalStyle />\n        <Router />\n      </ThemeProvider>\n      {/* <ReactQueryDevtools initialIsOpen /> */}\n    </QueryClientProvider>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}